fastcgi_cache_path  /tmp/nginx  levels=1:2  keys_zone=foobar:10m;
fastcgi_cache_key   $scheme://$host$saved_uri$is_args$args;  # The query string must be used here too, because symfony uses it to identify the ssi fragment

server {
    listen 80;
    root /var/www/html/symfony/public;
    client_max_body_size 40M;

    include fastcgi_params;  # We must put this here ahead, to let locations override the params

    location = /health {
        return 200 "healthy\n";
    }

    location = /ping {
        return 200 "pong\n";
    }

    location /_fragment {
        set $saved_uri /_fragment;  # We hardcode the value because internal ssi requests DO NOT update the $uri variable !
        try_files $uri /index.php$is_args$args;
        internal;
    }

    location / {
         set $saved_uri $uri;  # We need this because the $uri is renamed later when making the internal request towards "index.php", so we would loose the original request !
         try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {

        fastcgi_cache foobar;  # Remember to not use the directive "proxy_cache" fastcgi
        add_header X-Cache-Status $upstream_cache_status;  # Used for debugging
                                                           # NOTE nginx<->symfony cache is NOT considered in this

        fastcgi_param HTTP_SURROGATE_CAPABILITY "device=\"SSI/1.0\"";  # Nginx doesn't pass this http header to synfony even if ssi is on, but symfony needs it to know if the proxy is able to use ssi
        ssi on;

        fastcgi_param REQUEST_URI  $saved_uri;  # IMPORTANT The included default "fastcgi_params" uses $request_uri, so internal requests are skiped ! This causes an infinte loop because of ssi inclusion.
        fastcgi_param QUERY_STRING $args;  # For some reason, we need to pass it again even if the included default "fastcgi_params" slloks correct

        fastcgi_pass php-fpm:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT   $document_root;
        fastcgi_param REQUEST_METHOD  $request_method;
        fastcgi_param CONTENT_TYPE    $content_type;
        fastcgi_param CONTENT_LENGTH  $content_length;
        fastcgi_read_timeout 300;
        internal;
    }

    location ~ \.php$ {
        return 404;
    }

    location /status {
        access_log off;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass php-fpm:9000;
        fastcgi_index status.html;
    }

    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
}
